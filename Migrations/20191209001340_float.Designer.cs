// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using net_car_ASPNETCORE.Models;

namespace net_car_ASPNETCORE.Migrations
{
    [DbContext(typeof(net_car_ASPNETCOREContext))]
    [Migration("20191209001340_float")]
    partial class @float
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("net_car_ASPNETCORE.Models.Cliente", b =>
                {
                    b.Property<string>("cnpj")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("segmento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cnpj");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("net_car_ASPNETCORE.Models.DocumentoVeiculo", b =>
                {
                    b.Property<string>("documento_veiculo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("veiculo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("documento_veiculo");

                    b.ToTable("DocumentoVeiculo");
                });

            modelBuilder.Entity("net_car_ASPNETCORE.Models.Motorista", b =>
                {
                    b.Property<string>("cnh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cnpj_cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cnh");

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("net_car_ASPNETCORE.Models.Seguro", b =>
                {
                    b.Property<string>("contrato_seguro")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tipo_seguro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("contrato_seguro");

                    b.ToTable("Seguro");
                });

            modelBuilder.Entity("net_car_ASPNETCORE.Models.Veiculo", b =>
                {
                    b.Property<string>("documento_veiculo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ipva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("quilometragem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seguro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("documento_veiculo");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("net_car_ASPNETCORE.Models.Viagem", b =>
                {
                    b.Property<string>("numero_chamado")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("abastecimento")
                        .HasColumnType("real");

                    b.Property<string>("cnh_motorista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cnpj_cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distancia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documento_veiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("estacionamento")
                        .HasColumnType("real");

                    b.Property<float>("multa")
                        .HasColumnType("real");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("numero_chamado");

                    b.ToTable("Viagem");
                });
#pragma warning restore 612, 618
        }
    }
}
